;5-2
(define-struct child (father mother name date eyes))
(define (brother? a b)
  (and (not (null? (child-father a)))
       (not (null? (child-father b)))
       (eq? (child-father a) (child-father b))
       (eq? (child-mother a) (child-mother b))))
(define (child-gfathers c)
  (define (child-father* c)
    (if (or (null? c) (null? (child-father c)))
    '() (list (child-name (child-father c)))))
  (append (child-father* (child-father c)) (child-father* (child-mother c))))
(define (ancestor c)
  (if (null? c)
      '()
      (cons (child-name c)
            (append (ancestor (child-father c)) (ancestor (child-mother c))))))
